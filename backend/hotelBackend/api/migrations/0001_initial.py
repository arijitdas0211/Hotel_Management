# Generated by Django 5.2.1 on 2025-05-22 17:28

import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Billing',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('totalAmount', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=False)),
                ('paymentStatus', models.BooleanField(default=False)),
                ('paymentMode', models.CharField(choices=[('cash', 'Cash'), ('card', 'Card'), ('upi', 'UPI')], default='cash', max_length=100)),
            ],
            options={
                'db_table': 'billing',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=100)),
                ('food_type', models.IntegerField(choices=[(1, 'Veg'), (2, 'Non-Veg'), (3, 'Both')], default=3)),
                ('status', models.BooleanField(choices=[(True, 'Enabled'), (False, 'Disabled')], default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
            ],
            options={
                'db_table': 'food_category',
            },
        ),
        migrations.CreateModel(
            name='StaffType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('staffType', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Staff Type',
                'verbose_name_plural': 'Staff Types',
                'db_table': 'staff_type',
            },
        ),
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField()),
                ('is_superuser', models.BooleanField()),
                ('user_type', models.CharField(choices=[('superuser', 'SuperUser'), ('staff', 'Staff'), ('customer', 'Customer')], max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'myUser',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('cust_id', models.AutoField(primary_key=True, serialize=False)),
                ('foodPref', models.IntegerField(choices=[(1, 'Veg'), (2, 'Non-Veg'), (3, 'Both')], default=3)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\d{10}$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('myUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('booking_date', models.DateField()),
                ('booking_time', models.TimeField()),
                ('totalPeople', models.PositiveIntegerField()),
                ('food_type', models.IntegerField(choices=[(1, 'Veg'), (2, 'Non-Veg'), (3, 'Both')], default=3)),
                ('status', models.CharField(choices=[('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('progress', 'Progress')], default='confirmed', max_length=20)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.customerprofile')),
            ],
            options={
                'db_table': 'booking',
                'ordering': ['-booking_time'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=0)),
                ('feedback', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('feedback_status', models.BooleanField(default=False)),
                ('billing', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.billing')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.customerprofile')),
            ],
            options={
                'db_table': 'feedback',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('price', models.FloatField()),
                ('food_type', models.IntegerField(choices=[(1, 'Veg'), (2, 'Non-Veg'), (3, 'Both')], default=3)),
                ('image', models.ImageField(blank=True, null=True, upload_to='menu_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(choices=[(True, 'Enabled'), (False, 'Disabled')], default=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('food_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.foodcategory')),
            ],
            options={
                'db_table': 'menu',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('progress', 'Progress'), ('completed', 'Completed')], default='progress', max_length=20)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.booking')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.customerprofile')),
                ('items', models.ManyToManyField(related_name='orders', to='api.menu')),
            ],
            options={
                'db_table': 'order',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='billing',
            name='billItems',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.order'),
        ),
        migrations.CreateModel(
            name='StaffProfile',
            fields=[
                ('staff_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\d{10}$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('myUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('staffType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.stafftype')),
            ],
            options={
                'db_table': 'staff',
            },
        ),
        migrations.AddField(
            model_name='booking',
            name='assigned_to',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.staffprofile'),
        ),
        migrations.AddField(
            model_name='billing',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.staffprofile'),
        ),
        migrations.CreateModel(
            name='SuperUserProfile',
            fields=[
                ('super_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('phone', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\d{10}$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('myUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'superuser',
            },
        ),
        migrations.AddField(
            model_name='stafftype',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.superuserprofile'),
        ),
        migrations.AddField(
            model_name='staffprofile',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.superuserprofile'),
        ),
        migrations.AddField(
            model_name='menu',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.superuserprofile'),
        ),
        migrations.AddField(
            model_name='foodcategory',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.superuserprofile'),
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tableNo', models.IntegerField(unique=True)),
                ('capacity', models.IntegerField()),
                ('status', models.CharField(choices=[('free', 'Free'), ('reserved', 'Reserved')], default='free', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.superuserprofile')),
            ],
            options={
                'db_table': 'table',
            },
        ),
        migrations.AddField(
            model_name='booking',
            name='table',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='api.table'),
        ),
    ]
