# Generated by Django 5.2.1 on 2025-05-12 07:31

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=100)),
                ('food_type', models.IntegerField(choices=[(1, 'Veg'), (2, 'Non-Veg'), (3, 'Both')], default=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'food_category',
            },
        ),
        migrations.CreateModel(
            name='StaffType',
            fields=[
                ('staff_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('staff_type_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'staff_type',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=10, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('username', models.CharField(max_length=30, unique=True)),
                ('password', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=200)),
                ('food_pref', models.IntegerField(choices=[(1, 'Veg'), (2, 'Non-Veg'), (3, 'Both')], default=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('menu_id', models.AutoField(primary_key=True, serialize=False)),
                ('item_name', models.CharField(max_length=100)),
                ('item_price', models.FloatField()),
                ('food_type', models.IntegerField(choices=[(1, 'Veg'), (2, 'Non-Veg'), (3, 'Both')], default=3)),
                ('item_status', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=True)),
                ('item_image', models.ImageField(blank=True, null=True, upload_to='menu_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('food_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.foodcategory')),
            ],
            options={
                'db_table': 'menu',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('staff_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=10, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('username', models.CharField(max_length=30, unique=True)),
                ('password', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=True)),
                ('is_staff', models.BooleanField(choices=[(True, 'Staff'), (False, 'Super User')], default=True)),
                ('is_superuser', models.BooleanField(choices=[(True, 'Super User'), (False, 'Staff')], default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('staff_type', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.stafftype')),
            ],
            options={
                'db_table': 'staff',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_date', models.DateField(auto_now_add=True)),
                ('order_time', models.TimeField(auto_now_add=True)),
                ('order_status', models.BooleanField(choices=[(True, 'Completed'), (False, 'In Progress')], default=False)),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.customer')),
                ('items', models.ManyToManyField(to='api.menu')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.staff')),
            ],
            options={
                'db_table': 'order',
            },
        ),
        migrations.AddField(
            model_name='menu',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.staff'),
        ),
        migrations.AddField(
            model_name='foodcategory',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.staff'),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('booking_id', models.AutoField(primary_key=True, serialize=False)),
                ('booking_date', models.DateField(auto_now_add=True)),
                ('booking_time', models.TimeField(auto_now_add=True)),
                ('no_of_people', models.PositiveIntegerField()),
                ('booking_status', models.BooleanField(choices=[(True, 'Confirmed'), (False, 'Cancelled')], default=True)),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.customer')),
                ('staff', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='api.staff')),
            ],
            options={
                'db_table': 'booking',
            },
        ),
        migrations.CreateModel(
            name='Billing',
            fields=[
                ('bill_id', models.AutoField(primary_key=True, serialize=False)),
                ('total_amount', models.FloatField()),
                ('bill_date', models.DateField(auto_now_add=True)),
                ('bill_time', models.TimeField(auto_now_add=True)),
                ('bill_status', models.BooleanField(choices=[(True, 'Generated'), (False, 'Pending')], default=False)),
                ('bill_payment_status', models.BooleanField(choices=[(True, 'Paid'), (False, 'Unpaid')], default=False)),
                ('bill_payment_mode', models.CharField(choices=[('Cash', 'Cash'), ('Card', 'Card'), ('UPI', 'UPI')], default='Cash', max_length=100)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.booking')),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.customer')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.order')),
                ('staff', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.staff')),
            ],
            options={
                'db_table': 'billing',
            },
        ),
        migrations.CreateModel(
            name='SuperUser',
            fields=[
                ('admin_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=10, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('username', models.CharField(max_length=30, unique=True)),
                ('password', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=True)),
                ('is_staff', models.BooleanField(choices=[(True, 'Staff'), (False, 'Superuser')], default=True)),
                ('is_superuser', models.BooleanField(choices=[(True, 'Superuser'), (False, 'Staff')], default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'superuser',
            },
        ),
        migrations.AddField(
            model_name='stafftype',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.superuser'),
        ),
        migrations.AddField(
            model_name='staff',
            name='superuser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.superuser'),
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('table_no', models.IntegerField(unique=True)),
                ('capacity', models.IntegerField()),
                ('status', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.staff')),
            ],
            options={
                'db_table': 'table',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='table',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.table'),
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('feedback_id', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=0)),
                ('feedback', models.TextField()),
                ('feedback_date', models.DateField(auto_now_add=True)),
                ('feedback_time', models.TimeField()),
                ('feedback_status', models.BooleanField(choices=[(True, 'Provided'), (False, 'Not Provided')], default=False)),
                ('billing', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.billing')),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.customer')),
                ('staff', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.staff')),
                ('table', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.table')),
            ],
            options={
                'db_table': 'feedback',
            },
        ),
        migrations.AddField(
            model_name='booking',
            name='table',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.table'),
        ),
        migrations.AddField(
            model_name='billing',
            name='table',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.table'),
        ),
    ]
